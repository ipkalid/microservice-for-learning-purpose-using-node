{"version":3,"sources":["pages/HomePage.js","pages/LoginPage.js","pages/SignupPage.js","pages/RandomRecipePage.js","pages/AllRecipesPage.js","pages/AllRecipesPageGraphQL.js","pages/RandomRecipePageGraphQL.js","App.js","index.js"],"names":["HomePage","React","createElement","Fragment","class","src","alt","href","LoginPage","Email","setEmail","useState","password","setPassword","message","setMessage","className","onSubmit","async","e","preventDefault","response","fetch","method","headers","Content-Type","body","JSON","stringify","email","data","json","console","log","localStorage","setItem","userId","error","type","placeholder","value","onChange","target","SignupPage","username","setUsername","name","RandomRecipePage","recipe","setRecipe","fetchRandomRecipe","token","getItem","recipes","useEffect","calories","ingredients","map","ingredient","index","key","onClick","AllRecipesPage","setRecipes","fetchAllRecipes","_id","AllRecipesPageGraphQL","query","concat","allRecipes","RandomRecipePageGraphQL","randomRecipe","App","Router","Link","to","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9f8aebcb.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => {\n  return <>\n\n<div class=\"intro\">\n<img src=\"https://images.pexels.com/photos/1234535/pexels-photo-1234535.jpeg\" alt=\"Recipe\" />\n\n  <h1>Welcome to Our Recipe Viewer!</h1>\n  <p>Discover a new world of flavors and tastes with our Recipe Viewer app. Browse through our extensive collection of recipes from all over the world or let us surprise you with a random recipe. Whether you're a seasoned chef or a beginner, our app is designed to inspire you to create delicious meals. Start your culinary journey with us today!</p>\n  <a href='/random-recipe'><button>Explore Recipes</button></a>\n</div>\n    \n  </>\n};\n\nexport default HomePage;","import React, { useState } from 'react';\n\nconst LoginPage = () => {\n  const [Email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: Email, password }),\n      });\n      const data = await response.json();\n      console.log(data);\n      localStorage.setItem('token', data.userId);\n\n      // Set success message\n      setMessage('You are logged in successfully');\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n\n  return (\n    <div className='container'>\n      <h1>Login Page</h1>\n      {message && <p>{message}</p>}\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"email\" \n          placeholder=\"Email\" \n          value={Email} \n          onChange={(e) => setEmail(e.target.value)} \n        />\n        <input \n          type=\"password\" \n          placeholder=\"Password\" \n          value={password} \n          onChange={(e) => setPassword(e.target.value)} \n        />\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;","import React, { useState } from 'react';\n\nconst SignupPage = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(username, email, password);\n    try {\n      const response = await fetch('api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name :username, email, password }),\n      });\n      const data = await response.json();\n      console.log(data);\n\n      // Set success message\n      setMessage('You have signed up successfully');\n    } catch (error) {\n      console.error('Error during signup:', error);\n    }\n  };\n\n  return (\n    <div className='container'>\n      <h1>Signup Page</h1>\n      {message && <p>{message}</p>}\n      <form onSubmit={handleSubmit}>\n        <input \n          type=\"text\" \n          placeholder=\"Username\" \n          value={username} \n          onChange={(e) => setUsername(e.target.value)} \n        />\n        <input \n          type=\"email\" \n          placeholder=\"Email\" \n          value={email} \n          onChange={(e) => setEmail(e.target.value)} \n        />\n        <input \n          type=\"password\" \n          placeholder=\"Password\" \n          value={password} \n          onChange={(e) => setPassword(e.target.value)} \n        />\n        <button type=\"submit\">Signup</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignupPage;","import React, { useEffect, useState } from 'react';\n\nconst RandomRecipePage = () => {\n  const [recipe, setRecipe] = useState(null);\n\n  const fetchRandomRecipe = async () => {\n    try {\n      const response = await fetch('/api/recipe/randomRecipe', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'token': localStorage.getItem('token'),\n        },\n      });\n     \n      const data = await response.json();\n      console.log(data);\n      setRecipe(data.recipes);\n    } catch (error) {\n      console.error('Error fetching random recipe:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchRandomRecipe();\n  }, []);\n\n  return (\n    <div>\n      {recipe ? (\n        <div>\n          <h1>{recipe.name}</h1>\n          <p>Calories: {recipe.calories}</p>\n          <h2>Ingredients:</h2>\n          <ul>\n            {recipe.ingredients.map((ingredient, index) => (\n              <li key={index}>{ingredient}</li>\n            ))}\n          </ul>\n          <button onClick={fetchRandomRecipe}>Fetch New Recipe</button>\n        </div>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default RandomRecipePage;","import React, { useEffect, useState } from 'react';\n\nconst AllRecipesPage = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    const fetchAllRecipes = async () => {\n      try {\n        const response = await fetch('api/recipe/allRecipe', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'token': localStorage.getItem('token'),\n          },\n        });\n        const data = await response.json();\n        setRecipes(data.recipes);\n      } catch (error) {\n        console.error('Error fetching all recipes:', error);\n      }\n    };\n\n    fetchAllRecipes();\n  }, []);\n\n  return (\n    <div className=\"recipe-grid\">\n      {recipes.map((recipe) => (\n        <div key={recipe._id} className=\"recipe-card\">\n          <h2>{recipe.name}</h2>\n          <p>Calories: {recipe.calories}</p>\n          <h3>Ingredients:</h3>\n          <ul>\n            {recipe.ingredients.map((ingredient, index) => (\n              <li key={index}>{ingredient}</li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AllRecipesPage;","import React, { useEffect, useState } from 'react';\n\nconst AllRecipesPageGraphQL = () => {\n  const [recipes, setRecipes] = useState([]);\n\n  useEffect(() => {\n    const fetchAllRecipes = async () => {\n      try {\n        const response = await fetch('/graphql', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              query: `\n                {\n                  allRecipes(token: \"${localStorage.getItem('token')}\") {\n                    name\n                    ingredients\n                  }\n                }\n              `,\n            }),\n          });\n        const data = await response.json();\n        console.log(data);\n        setRecipes(data.data.allRecipes);\n      } catch (error) {\n        console.error('Error fetching all recipes:', error);\n      }\n    };\n\n    fetchAllRecipes();\n  }, []);\n\n  return (\n    <div className=\"recipe-grid\">\n      {recipes.map((recipe) => (\n        <div key={recipe._id} className=\"recipe-card\">\n          <h2>{recipe.name}</h2>\n          <p>Calories: {recipe.calories}</p>\n          <h3>Ingredients:</h3>\n          <ul>\n            {recipe.ingredients.map((ingredient, index) => (\n              <li key={index}>{ingredient}</li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AllRecipesPageGraphQL;","import React, { useEffect, useState } from 'react';\n\nconst RandomRecipePageGraphQL = () => {\n    const [recipe, setRecipe] = useState(null);\n\n    const fetchRandomRecipe = async () => {\n        try {\n            const response = await fetch('/graphql', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                  query: `\n                    {\n                        randomRecipe(token: \"${localStorage.getItem('token')}\") {\n                        name\n                        ingredients\n                      }\n                    }\n                  `,\n                }),\n              });\n            const data = await response.json();\n            setRecipe(data.data.randomRecipe);\n        } catch (error) {\n            console.error('Error fetching random recipe:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchRandomRecipe();\n    }, []);\n\n    return (\n        <div>\n            {recipe ? (\n                <div>\n                    <h1>{recipe.name}</h1>\n                    <p>Calories: {recipe.calories}</p>\n                    <h2>Ingredients:</h2>\n                    <ul>\n                        {recipe.ingredients.map((ingredient, index) => (\n                            <li key={index}>{ingredient}</li>\n                        ))}\n                    </ul>\n                    <button onClick={fetchRandomRecipe}>Fetch New Recipe</button>\n                </div>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default RandomRecipePageGraphQL;","// App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport SignupPage from './pages/SignupPage';\nimport RandomRecipePage from './pages/RandomRecipePage';\nimport AllRecipesPage from './pages/AllRecipesPage';\nimport AllRecipesPageGraphQL from './pages/AllRecipesPageGraphQL';\nimport RandomRecipePageGraphQL from './pages/RandomRecipePageGraphQL';\nconst App = () => {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li><Link to=\"/\">Home</Link></li>\n          <li><Link to=\"/login\">Login</Link></li>\n          <li><Link to=\"/signup\">Signup</Link></li>\n          <li><Link to=\"/random-recipe\">Random Recipe</Link></li>\n          <li><Link to=\"/all-recipes\">All Recipes</Link></li>\n          <li><Link to=\"/all-recipes-graphql\">ALL Recipe GraphQL</Link></li>\n          <li><Link to=\"/random-recipe-graphql\">Random GraphQL</Link></li>\n        </ul>\n      </nav>\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n        <Route path=\"/signup\" element={<SignupPage />} />\n        <Route path=\"/random-recipe\" element={<RandomRecipePage />} />\n        <Route path=\"/all-recipes\" element={<AllRecipesPage />} />\n        <Route path=\"/all-recipes-graphql\" element={<AllRecipesPageGraphQL/>} />\n        <Route path=\"/random-recipe-graphql\" element={<RandomRecipePageGraphQL/>} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}